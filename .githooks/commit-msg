#!/usr/bin/env python
import sys
import os

# Adapted from https://gist.github.com/lynnkwong/439440f2d827f4abd3db5599be8a838b#file-commit-msg

def check_commit_msg_pattern(commit_msg_temp_file):
    # The argument passed to the "commit-msg" hook is the path to a
    # temporary file that contains the commit message written by the
    # developer.

    if not os.path.exists(commit_msg_temp_file):
        print("ERROR: " + commit_msg_temp_file + " does not exist! Please make sure to make a commit or point to the correct commit message file to run the test.")
        sys.exit(1)

    # Read the commit message file
    with open(commit_msg_temp_file, "r") as f_msg:
        lines = f_msg.readlines()

    # Remove the comment lines in the commit message.
    lines = [l for l in lines if not l.strip().startswith("#")]

    has_warning = False

    # Check if commit title is < 72 chars
    if len(lines[0]) > 72:
        has_warning = True
        message = (
            "There should be less then 72 characters in the commit title."
        )
        print("ERROR: [Policy] " + message)
        sys.exit(1)

    # Check if commit message begins with the commit_names followed by ':'
    commit_names = ['build', 'chore', 'ci', 'docs', 'feat', 'fix', 'perf', 'refactor', 'revert', 'style', 'test']
    
    correct = False
    for name in commit_names:
        if name + ":" in lines[0]:
            correct = True

    if not correct:
        has_warning = True
        message = "You must specify the commit type followed by ':' in front of your commit messages. The possible options include: 'build', 'chore', 'ci', 'docs', 'feat', 'fix', 'perf', 'refactor', 'revert', 'style', and 'test'."
        print("ERROR: [Policy] " + message)
        sys.exit(1)


    # Notify user that checks passed
    if not has_warning:
        message = "The commit message has the required pattern."
        print("OK: [Policy] " + message)
    

if __name__ == "__main__":
    commit_msg_temp_file = sys.argv[1] if len(sys.argv) > 1 else ".git/COMMIT_EDITMSG"
    check_commit_msg_pattern(commit_msg_temp_file)
